---
import type { GetStaticPaths } from 'astro';
import { client } from '../../../tina/__generated__/client';
import Layout from '../../layouts/Layout.astro';
import TeamNews from '../../components/TeamNews';

export const getStaticPaths = (async () => {
  const response = await client.queries.teamConnection();

  const slugs = response.data.teamConnection.edges?.map((edge) => edge?.node?.slug ?? '') ?? [];

  return slugs.map((slug) => ({
    params: {
      relativePath: slug ?? '',
      slug,
    },
  }));
}) satisfies GetStaticPaths;

const { slug } = Astro.params;
const currentYear = new Date().getFullYear();

const teamConnection = await client.queries.teamConnection();
const teamData = teamConnection.data.teamConnection.edges?.find((edge) => edge?.node?.slug === slug)?.node;

const teamNewsConnection = await client.queries.teamNewsConnection();
const teamNewsData =
  teamNewsConnection.data.teamNewsConnection.edges
    ?.filter((edge) => edge?.node?.team?.id === teamData?.id)
    .map((edge) => edge?.node)
    .filter(Boolean) ?? [];
const sortedNewsByCreatedAtDesc = teamNewsData.sort((a, b) => {
  if (a?.createdAt && b?.createdAt) {
    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();
  }
  return 0;
});
const filteredNewsByYear = sortedNewsByCreatedAtDesc.filter((news) => {
  if (news?.createdAt) {
    return new Date(news.createdAt).getFullYear() === currentYear;
  }
  return false;
});

const { ageGroup, league, contact, email, phone, training } = teamData ?? {};
---

<Layout>
  <h1>{ageGroup}</h1>
  <div class="card bg-primary-content w-fit m-auto mb-8">
    <div class="card-body w-fit py-0">
      <table class="w-fit">
        <tbody>
          {
            league && (
              <tr>
                <th class="!text-end">Liga</th>
                <td class="text-start">{league}</td>
              </tr>
            )
          }
          {
            contact && (
              <tr>
                <th class="!text-end">Ansprechperson</th>
                <td class="text-start">{contact}</td>
              </tr>
            )
          }
          {
            email && (
              <tr>
                <th class="!text-end">E-Mail</th>
                <td class="text-start">
                  <a href={`mailto:${email}`}>{email}</a>
                </td>
              </tr>
            )
          }
          {
            phone && (
              <tr>
                <th class="!text-end">Telefon</th>
                <td class="text-start">
                  <a href={`tel:${phone}`}>{phone}</a>
                </td>
              </tr>
            )
          }
          {
            training && (
              <tr>
                <th class="!text-end">Training</th>
                <td class="text-start">{training}</td>
              </tr>
            )
          }
        </tbody>
      </table>
    </div>
  </div>
  {filteredNewsByYear?.map((teamNews) => <TeamNews query="" variables={{}} data={{ teamNews }} />)}
  {!filteredNewsByYear?.length && <i>Noch keine Neuigkeiten f√ºr das Jahr {currentYear}</i>}
  <p>Neuigkeiten aus vergangenen Jahren befinden sich im <a href="/archiv/rueckblick">Archiv</a>.</p>
</Layout>
