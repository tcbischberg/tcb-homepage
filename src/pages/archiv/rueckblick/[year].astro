---
import type { GetStaticPaths } from 'astro';
import { client } from '../../../../tina/__generated__/client';
import Layout from '../../../layouts/Layout.astro';
import Article from '../../../components/Article.astro';
import TeamNews from '../../../components/TeamNews';
import { shouldShowInternalArticles } from '../../../helper';

export const getStaticPaths = (async () => {
  const response = await client.queries.articleConnection();
  const years = [
    ...new Set(
      response.data.articleConnection.edges
        ?.filter((edge) => (shouldShowInternalArticles ? true : !edge?.node?.internal))
        .map((edge) => new Date(edge?.node?.createdAt ?? '').getFullYear()) ?? []
    ),
  ].sort((a, b) => b - a);

  return years.map((year) => year.toString()).map((year) => ({ params: { relativePath: year, year } }));
}) satisfies GetStaticPaths;

const { year: yearString } = Astro.params;

const year = parseInt(yearString);

const response = await client.queries.articleConnection();
const availableYears = [
  ...new Set(
    response.data.articleConnection.edges
      ?.filter((edge) => (shouldShowInternalArticles ? true : !edge?.node?.internal))
      .map((edge) => new Date(edge?.node?.createdAt ?? '').getFullYear()) ?? []
  ),
].sort((a, b) => b - a);

const articleConnection = await client.queries.articleConnection({
  sort: 'createdAt',
  last: 1_000_000, // HINT: Hacky, because I can't figure out how to sort descending
});

const articlesOfCorrectYear =
  articleConnection.data.articleConnection.edges
    ?.map((edge) => edge?.node)
    .filter((node) => new Date(node?.createdAt ?? '').getFullYear() === year) ?? [];

const articles = await Promise.all(
  articlesOfCorrectYear
    .filter((node) => (shouldShowInternalArticles ? true : !node?.internal))
    .map((node) => client.queries.article({ relativePath: node?._sys.relativePath ?? '' }))
);

const hasMoreInternalArticles = articlesOfCorrectYear.length < articles.length;

const teamConnection = await client.queries.teamConnection({
  sort: 'order',
});

const teams = teamConnection.data.teamConnection.edges?.map((edge) => edge?.node) ?? [];
const currentTeams = teams.filter((team) => new Date(team?.season ?? '').getFullYear() === year);
// const sortedTeamsByOrder = currentTeams.sort((a, b) => (a?.order ?? Infinity) - (b?.order ?? Infinity));

const teamsWithNews = await Promise.all(
  currentTeams.map(async (team) => {
    const teamNewsConnection = await client.queries.teamNewsConnection({
      filter: { team: { team: { season: { eq: team?.season }, ageGroup: { eq: team?.ageGroup } } } },
    });

    const teamNews = teamNewsConnection.data.teamNewsConnection.edges?.map((edge) => edge?.node) ?? [];

    return { ...team, news: teamNews };
  })
);
---

<Layout
  ><h1>
    Der TC Bischberg<ul class="menu menu-horizontal rounded-box text-5xl !my-0 !px-0">
      <li class="!my-0">
        <details>
          <summary>{year}</summary>
          <ul class="!px-0 !my-0 right-0">
            {
              availableYears.map((availableYear) => (
                <li class="!p-0 !my-0">
                  <a
                    class:list={[
                      'no-underline',
                      'block',
                      'text-center',
                      year === availableYear && 'pointer-events-none',
                      year === availableYear && 'text-blue',
                      year === availableYear && 'font-bold',
                    ]}
                    href={`/archiv/rueckblick/${availableYear}`}
                  >
                    {availableYear}
                  </a>
                </li>
              ))
            }
          </ul>
        </details>
      </li>
    </ul>
  </h1>
  {
    !!teamsWithNews?.length && (
      <>
        <nav class="bg-secondary-content rounded-box w-fit m-auto">
          <ul class="menu !p-4 text-xl">
            <li class="!my-0">
              <a class="!m-0 no-underline" href="#verein">
                Vereinsnews
              </a>
            </li>
            <li class="!my-0">
              <a class="!m-0 no-underline" href="#mannschaften">
                Mannschaftsnews
              </a>
              <ul class="!my-0 !ps-0">
                {teamsWithNews.map((team) => (
                  <li class="!my-0">
                    <a class="!m-0 no-underline" href={`#mannschaften-${team.slug}`}>
                      {team.ageGroup}
                    </a>
                  </li>
                ))}
              </ul>
            </li>
          </ul>
        </nav>
        <h2 id="verein">Vereinsnews</h2>
      </>
    )
  }
  {
    hasMoreInternalArticles && (
      <div class="mt-4 text-center italic text-2xl">
        Es gibt noch mehr interne Artikel. Für den vollen Umfang bitte{' '}
        <a href={`/login?${new URLSearchParams({ redirect: Astro.url.href }).toString()}`}>anmelden</a>.
      </div>
    )
  }
  {articles.map((article) => <Article {...article} />)}{
    !articles.length && (
      <div class="mt-4 text-center italic text-2xl">Dieses Jahr wurden noch keine Artikel veröffentlicht.</div>
    )
  }
  {!!teamsWithNews?.length && <h2 id="mannschaften">Mannschaftsnews</h2>}
  {
    teamsWithNews.map((team) => (
      <div id={`mannschaften-${team.slug}`} class="collapse bg-primary-content mb-4 collapse-arrow">
        <input type="radio" name="teams" />
        <div class="collapse-title text-xl font-medium text-center">{team?.ageGroup}</div>
        <div class="collapse-content">
          {team?.news.map((news) => (
            <TeamNews data={{ teamNews: news }} />
          ))}
        </div>
      </div>
    ))
  }
</Layout>
